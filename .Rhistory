cnt <- count(x)
rsc <- rscu(x)
ra  <- rac(x)
p1 <- plot(cnt)
p2 <- plot(rsc)
p3 <- plot(ra)
p1
p2
p3
?case_when
?switch
value = 'count'
dat <- switch(
value,
count = count(object),
rscu  = rscu(object),
rac   = rac(object),
#cai   = cai(object),
)
dat
value = 'rac'
dat <- switch(
value,
count = count(object),
rscu  = rscu(object),
rac   = rac(object),
#cai   = cai(object),
)
dat
devtools::load_all()
devtools::load_all()
scale(1:10, 1, 9)
missing(scale)
devtools::load_all()
x
plot(x)
devtools::load_all()
plot(x)
devtools::load_all()
plot(x)
devtools::load_all()
plot(x)
devtools::load_all()
plot(x)
value = 'count'
dat <- switch(
value,
count = count(object),
rscu  = rscu(object),
rac   = rac(object),
#cai   = cai(object),
)
class(dat)
devtools::load_all()
plot(x)
dat
as.data.frame(count(x))
devtools::load_all()
plot(x)
count(x)
count(x) |> as.data.frame()
devtools::load_all()
plot(x)
devtools::load_all()
plot(x)
plot(x, 'count', TRUE)
plot(x, value = 'count', scale = TRUE)
plot(x, value = 'count', scale = 'all')
plot(x, value = 'count', scale = 'aa')
plot(x, value = 'rscu', scale = 'aa')
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
plot(x, value = 'rac', scale = FALSE)
plot(x, value = 'rscu', scale = FALSE)
plot(x, value = 'count', scale = FALSE)
plot(x, value = 'count', scale = 'aa')
scale(1, 1, 1)
devtools::load_all()
plot(x, value = 'rac', scale = 'all')
plot(x, value = 'count', scale = 'all')
plot(x, value = 'count', scale = F)
plot(x, value = 'count', scale = T)
plot(x, value = 'rac', scale = T)
plot(x, value = 'rac', scale = 'aa')
plot(x, value = 'rac', scale = F)
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
plot(x, value = 'rac', scale = 'all')
devtools::load_all()
plot(x, value = 'rac', scale = 'all')
plot(x, value = 'rac', scale = FALSE)
scale = 'all'
dat <- switch(
value,
count = count(object),
rscu  = rscu(object),
rac   = rac(object),
#cai   = cai(object),
)
dat
dat <- as.data.frame(dat) |>
dplyr::filter(val > 0, aa != '*')
dat
if (scale == 'all' | scale == TRUE) {
dat <- dat |>
dplyr::mutate(val = (val - min(val) / (max(val) - min(val))))
} else if (scale == 'aa') {
dat <- dat |>
dplyr::group_by(aa) |>
dplyr::mutate(val = (val - min(val)) / (max(val) - min(val))) |>
dplyr::ungroup()
}
scale
dat
dat <- switch(
value,
count = count(object),
rscu  = rscu(object),
rac   = rac(object),
#cai   = cai(object),
)
dat <- as.data.frame(dat) |>
dplyr::filter(val > 0, aa != '*')
scale(dat$val, min(dat$val), max(dat$val) - min(dat$val))
scale(dat$val, min(dat$val), max(dat$val) - min(dat$val))[, 1] |> sum()
devtools::load_all()
plot(x, value = 'rac', scale = FALSE)
plot(x, value = 'rac', scale = TRUE)
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
plot(x, value = 'count', scale = 'aa')
plot(x, value = 'rscu', scale = 'aa')
plot(x, value = 'rscu', scale = 'all')
plot(x, value = 'count', scale = 'all')
plot(x, value = 'rasc', scale = 'all')
plot(x, value = 'rac', scale = 'all')
plot(x, value = 'rac')
plot(x, value = 'rac', scale = F)
plot(x, value = 'rac', scale = T)
plot(x, value = 'rac', scale = F)
plot(x, value = 'rac', scale = 'all')
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
seq(10)
devtools::load_all()
seq(10)
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
warnings()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
warnings()
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
dat
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = F)
head(dat)
devtools::load_all()
plot(x, value = 'rac', scale = F)
plot(x, value = 'rac', scale = T)
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
?forcats::fct_reorder
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
devtools::load_all()
plot(x, value = 'rac', scale = 'aa')
plot(x, value = 'count', scale = 'aa')
plot(x, value = 'rscu', scale = 'aa')
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
?scales::percent
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
devtools::load_all()
plot(x, value = 'rscu', scale = 'aa')
plot(x, value = 'rscu', scale = 'all')
plot(x, value = 'rscu', scale = FALSE)
rac(x)
res <- rac(x)
c(res)
cbind(res)
cbind(res@data)
c(res@data)
rbind(res@data)
unlist(res@data)
as.vector(res@data)
names(res) <- NULL
res
class(res)
res <- res@data
unlist(res)
names(res) <- NULL
unlist(res)
w <- rac(object)
w <- setNames(w@data, NULL)
w
w <- unlist(setNames(w@data, NULL))
w <- rac(object)
w <- unlist(setNames(w@data, NULL))
w
w <- w[object@data]
w
#' Creates a Count instance from a given Cub object
#' @param object A Cub instance to summarize
#' @return RSCU representing Relative Synonymous Codon Usage for a given Gene / Genome
#' @export
#' @examples
#' dat <- Cub('A DNA', PA14CDS[[1]])
#' rscu(dat)
setMethod('cai', signature('Cub'), function(object) {
w <- rac(object)
w <- unlist(setNames(w@data, NULL))
w <- w[object@data]
res <- power(product(w), 1 / length(w))
return(res)
})
devtools::load_all()
x
cai(x)
?power
devtools::load_all()
cai(x)
?product
devtools::load_all()
cai(x)
codons(x)
y <- CubSet(PA14CDS)
devtools::load_all()
y <- CubSet(PA14CDS[1:10])
rscu(y)
devtools::load_all()
rac(y)
cai(y)
y <- CubSet(PA14CDS)
res <- cai(y)
hist(res)
x <- CubSet(PAO1CDS)
res2 <- cai(x)
par(mfrow = c(2, 1))
hist(res, main = 'PA14')
hist(res2, main = 'PAO1')
summary(res)
summary(res1)
summary(res2)
quantile(res1)
quantile(res)
quantile(res, na.rm = TRUE)
which(res < .5)
which(res2 < .5)
PA14CDS[which(res < .5)]
PAO1CDS[which(res2 < .5)]
rac(x)
ref <- CubSet(PA14CDS[sample(1:5000, 100)])
devtools::load_all()
devtools::load_all()
ref
count(ref)
devtools::load_all()
devtools::load_all()
devtools::load_all()
count(ref)
rac(x, ref)
devtools::load_all()
rac(x, ref)
object = x
cnts_obs <- count(object)
cnts_max <- count(ref, each = FALSE)
res <- lapply(names(cnts_obs@data), function(nm) {
cnts_obs@data[[nm]] / max(cnts_max@data[[nm]])
})
res
setNames(res, names(cnts_obs))
res
res <- setNames(res, names(cnts_obs))
res
names(cnts_obs@data)
res <- lapply(names(cnts_obs@data), function(nm) {
cnts_obs@data[[nm]] / max(cnts_max@data[[nm]])
})
res <- setNames(res, names(cnts_obs))
res
class(res)
names(res) <- names(cnts_obs$data)
names(res) <- names(cnts_obs@data)
res
devtools::load_all()
rc <- rac(x, ref)
w <- rac(object, ref)
x <- Cub(PA14[[1]])
x <- Cub(PA14CDS[[1]])
x <- Cub('a', PA14CDS[[1]])
x
rac(x, ref)
res <- rac(x, ref)
class(res)
res <- res@data
hist(res)
hist(unlist(res))
x <- Cub('a', PA14CDS[[11]])
res <- rac(x, ref)
res <- res@data
hist(unlist(res))
cai(x, ref)
cai(x, ref = ref)
cai(object = x, ref = ref)
object <- x
ref
class(object)
class(ref)
rac(ref)
count(ref)
devtools::load_all()
res <- cai(x, ref)
res
x
devtools::load_all()
res <- cai(x, ref)
res
x
ref
rac(x, ref)
w <- rac(object, ref)
w <- unlist(setNames(w@data, NULL))
w
w[w == 0] <- .5
w
w <- w[object@data]
w
res <- prod(w)^(1 / length(w))
res
prod(w[1:10])
x
x <- Cub(PA14[[1000]])
x <- Cub(PA14CDS[1000])
x <- Cub('', PA14CDS[1000])
x <- Cub('', PA14CDS[[1000]])
res <- cai(x, ref)
res
x <- ref[[1]]
x <- ref@data[[1]]
res <- cai(x, ref)
res
y
x
x <- CubSet(PA14CDS)
res <- sapply(x@data, function(x){cai(x, ref)})
hist(res)
par(mfrow(c(1, 1)))
par(mfrow = c(1, 1))
hist(res)
res2 <- sapply(y@data, function(x){cai(x, ref)})
hist(res2)
ref <- CubSet(PA14CDS[samle(1:5000, 2500)])
ref <- CubSet(PA14CDS[samle(5000, 2500)])
ref <- CubSet(PA14CDS[sample(5000, 2500)])
res <- sapply(x@data, function(x){cai(x, ref)})
hist(res)
plot(x)
plot(x@data[[1]])
plot(x@data[[1]], value = 'count')
plot(x@data[[1]], value = 'count', scale = 'all')
dat <- new('Cub', unlist(setNames(object@data, NULL)))
class(object)
object <- x
dat <- new('Cub', unlist(setNames(object@data, NULL)))
dat <- Cub('', unlist(setNames(object@data, NULL)))
dat <- new('Cub', data = unlist(setNames(object@data, NULL)))
dat <- unlist(setNames(object@data, NULL))
class(dat)
length(dat)
dat <- setNames(object@data, NULL)
dat <- unlist(dat)
class(dat)
dat <- unlist(dat)
class(dat)
dat[1:2]
dat <- lapply(object@data, unlist)
class(dat)
dat <- unlist(lapply(object@data, unlist))
class(dat)
dat <- unlist(lapply(object@data, \(x) { x@data }))
class(dat)
length(dat)
dat <- new('Cub', data = dat)
devtools::load_all()
plot(x)
plot(x, value = 'count', scale = F)
plot(x, value = 'count', scale = 'aa')
plot(y, value = 'count', scale = 'aa')
plot(y, value = 'count', scale = F)
plot(x, value = 'count', scale = F)
plot(y, value = 'count', scale = F)
plot(x, value = 'count', scale = F)
pa14 <- Cub('pa14', PA14CDS)
pa14 <- CubSet(PA14CDS)
pa01 <- CubSet(PA01CDS)
pa01 <- CubSet(PAO1CDS)
plot(pao1, value = count, scale = F)
plot(pa01, value = count, scale = F)
plot(pa14, value = count, scale = F)
plot(pa14, value = 'count', scale = F)
plot(pa01, value = 'count', scale = F)
plot(pa01, value = 'count', scale = T)
plot(pa14, value = 'count', scale = T)
plot(pa01, value = 'count', scale = 'aa')
plot(pa14, value = 'count', scale = 'aa')
usethis::use_data_raw()
use_data()
usethis::use_data()
usethis::use_data('PA14.R')
usethis::use_data_raw('PA14')
usethis::use_data_raw('PAO1')
library(usethis)
use_data()
use_data('PA14')
usethis::use_data(PA14, overwrite = TRUE, compress = 'xz')
source("~/dev/cub/data-raw/PA14.R")
PA14
use_data(PA14, name = 'PA14')
usethis::use_data(PA14, overwrite = TRUE, compress = 'xz')
source("~/dev/cub/data-raw/PAO1.R")
use_readme_md()
use_badge('experimental')
use_lifecycle_badge('experimental')
plot(PAO1, value = 'count', scale = 'all')
p1 <- plot(PAO1, value = 'count', scale = FALSE)
p2 <- plot(PAO1, value = 'count', scale = TRUE)
p3 <- plot(PAO1, value = 'count', scale = 'aa')
ggarrange(p1, p2, p3, labels = letters[1:3], ncol = 2, nrow = 2)
library(ggpubr)
ggarrange(p1, p2, p3, labels = letters[1:3], ncol = 2, nrow = 2)
use_citation()
count(pao1) |>
as.data.frame() |>
xlsx::write.xlsx('./data/xlsx/pao1_cdn_cnt.xls', 'Counts', row.names = F)
count(PAO1) |>
as.data.frame() |>
xlsx::write.xlsx('./data/xlsx/pao1_cdn_cnt.xls', 'Counts', row.names = F)
count(PAO1) |>
as.data.frame() |>
xlsx::write.xlsx('./data/pao1_cdn_cnt.xls', 'Counts', row.names = F)
roxygen2::roxygenise()
roxygen2::roxygenise()
pao1 <- pao1
library(cub)
pao1 <- PAO1
pa14 <- PA14
plot(p)
plot(pao1, value = 'count', scale = T)
plot(pa14, value = 'count', scale = T)
p1 <- plot(pa14, value = 'count', scale = T)
p2 <- plot(pa14, value = 'count', scale = T)
p1 <- plot(pao1, value = 'count', scale = T)
plot(pao1, value = 'count', scale = 'aa')
